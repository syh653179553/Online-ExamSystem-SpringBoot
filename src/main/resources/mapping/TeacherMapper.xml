<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.exam.mapper.TeacherMapper">
  <resultMap id="BaseResultMap" type="com.exam.entity.Teacher">
    <id column="teacherId" jdbcType="INTEGER" property="teacherId" />
    <result column="teacherName" jdbcType="VARCHAR" property="teacherName" />
    <result column="institute" jdbcType="VARCHAR" property="institute" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="pwd" jdbcType="VARCHAR" property="pwd" />
    <result column="cardId" jdbcType="VARCHAR" property="cardId" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="role" jdbcType="VARCHAR" property="role" />
  </resultMap>
  <sql id="Base_Column_List">
    teacherId, teacherName, institute, sex, tel, email, pwd, cardId, type, role
  </sql>
  <!--分页查询老师信息-->
  <select id="findAllPage" parameterType="com.baomidou.mybatisplus.extension.plugins.pagination.Page" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from teacher
  </select>
  <!--查询所有老师信息-->
  <select id="findAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from teacher
  </select>
  <!--根据id查询一名老师信息-->
  <select id="findById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from teacher
    where teacherId = #{teacherId,jdbcType=INTEGER}
  </select>
  <!--根据id删除一名老师信息-->
  <delete id="deleteById" parameterType="java.lang.Integer">
    delete from teacher
    where teacherId = #{teacherid,jdbcType=INTEGER}
  </delete>
  <!--更新老师信息-->
  <update id="update" parameterType="com.exam.entity.Teacher">
    update teacher
    set teacherName = #{teacherName,jdbcType=VARCHAR},
      institute = #{institute,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      pwd = #{pwd,jdbcType=VARCHAR},
      cardId = #{cardId,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      role = #{role,jdbcType=VARCHAR}
    where teacherId = #{teacherId,jdbcType=INTEGER}
  </update>
  <!--添加一条老师信息-->
  <insert id="add" parameterType="com.exam.entity.Teacher">
    insert into teacher (teacherId, teacherName, institute,
      sex, tel, email, pwd,
      cardId, type, role)
    values (#{teacherId,jdbcType=INTEGER}, #{teacherName,jdbcType=VARCHAR}, #{institute,jdbcType=VARCHAR},
      #{sex,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{pwd,jdbcType=VARCHAR},
      #{cardId,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR})
  </insert>






  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from teacher
    where teacherId = #{teacherid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from teacher
    where teacherId = #{teacherid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.exam.entity.Teacher">
    insert into teacher (teacherId, teacherName, institute, 
      sex, tel, email, pwd, 
      cardId, type, role)
    values (#{teacherid,jdbcType=INTEGER}, #{teachername,jdbcType=VARCHAR}, #{institute,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{pwd,jdbcType=VARCHAR}, 
      #{cardid,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.exam.entity.Teacher">
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="teacherid != null">
        teacherId,
      </if>
      <if test="teachername != null">
        teacherName,
      </if>
      <if test="institute != null">
        institute,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="pwd != null">
        pwd,
      </if>
      <if test="cardid != null">
        cardId,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="role != null">
        role,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="teacherid != null">
        #{teacherid,jdbcType=INTEGER},
      </if>
      <if test="teachername != null">
        #{teachername,jdbcType=VARCHAR},
      </if>
      <if test="institute != null">
        #{institute,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null">
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="cardid != null">
        #{cardid,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.exam.entity.Teacher">
    update teacher
    <set>
      <if test="teachername != null">
        teacherName = #{teachername,jdbcType=VARCHAR},
      </if>
      <if test="institute != null">
        institute = #{institute,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null">
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="cardid != null">
        cardId = #{cardid,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=VARCHAR},
      </if>
    </set>
    where teacherId = #{teacherid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.exam.entity.Teacher">
    update teacher
    set teacherName = #{teachername,jdbcType=VARCHAR},
      institute = #{institute,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      pwd = #{pwd,jdbcType=VARCHAR},
      cardId = #{cardid,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      role = #{role,jdbcType=VARCHAR}
    where teacherId = #{teacherid,jdbcType=INTEGER}
  </update>
</mapper>