<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.exam.mapper.MultiQuestionMapper">
  <resultMap id="BaseResultMap" type="com.exam.entity.MultiQuestion">
    <id column="questionId" jdbcType="INTEGER" property="questionId" />
    <result column="subject" jdbcType="VARCHAR" property="subject" />
    <result column="question" jdbcType="VARCHAR" property="question" />
    <result column="answerA" jdbcType="VARCHAR" property="answerA" />
    <result column="answerB" jdbcType="VARCHAR" property="answerB" />
    <result column="answerC" jdbcType="VARCHAR" property="answerC" />
    <result column="answerD" jdbcType="VARCHAR" property="answerD" />
    <result column="rightAnswer" jdbcType="VARCHAR" property="rightAnswer" />
    <result column="analysis" jdbcType="VARCHAR" property="analysis" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="section" jdbcType="VARCHAR" property="section" />
    <result column="level" jdbcType="VARCHAR" property="level" />
    <result column="question_setter" jdbcType="VARCHAR" property="questionSetter" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="wrong_count" jdbcType="INTEGER" property="wrongCount" />
  </resultMap>
  <sql id="Base_Column_List">
    questionId, subject, question, answerA, answerB, answerC, answerD, rightAnswer, analysis, 
    score, section, level, question_setter, update_time, state, wrong_count
  </sql>
  <!--根据试卷管理表的id查询出所有属于该试卷的所有选择题-->
  <select id="findByIdAndType" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select * from multi_question where questionId in
    (select questionId from paper_manage where questionType = 1 and paperId = #{paperId})
  </select>
  <!--分页查询所有选择题信息-->
  <select id="findAll" parameterType="com.baomidou.mybatisplus.extension.plugins.pagination.Page" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from multi_question
  </select>
  <!--查询最后一条questionId-->
  <select id="Select" resultMap="BaseResultMap">
    select questionId from multi_question order by questionId desc limit 1
  </select>
  <!--添加一条选择题-->
  <insert id="add" parameterType="com.exam.entity.MultiQuestion">
    insert into multi_question (questionId, subject, question,
      answerA, answerB, answerC,
      answerD, rightAnswer, analysis,
      score, section, level,
      question_setter, update_time, state,
      wrong_count)
    values (#{questionId,jdbcType=INTEGER}, #{subject,jdbcType=VARCHAR}, #{question,jdbcType=VARCHAR},
      #{answerA,jdbcType=VARCHAR}, #{answerB,jdbcType=VARCHAR}, #{answerC,jdbcType=VARCHAR},
      #{answerD,jdbcType=VARCHAR}, #{rightAnswer,jdbcType=VARCHAR}, #{analysis,jdbcType=VARCHAR},
      #{score,jdbcType=INTEGER}, #{section,jdbcType=VARCHAR}, #{level,jdbcType=VARCHAR},
      #{questionSetter,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER},
      #{wrongCount,jdbcType=INTEGER})
  </insert>
  <!--根据科目随机查询出pageNo条选择题表id-->
  <select id="findBySubject" resultType="java.lang.Integer">
    select questionId from multi_question  where subject =#{subject} order by rand() desc limit #{pageNo}
  </select>
  <select id="findBySubjectSimply" resultType="java.lang.Integer">
    select questionId from multi_question  where subject =#{subject} and (level = '1' or level = '2') order by rand() desc limit #{pageNo}
  </select>

  <select id="findBySubjectCommon" resultType="java.lang.Integer">
    select questionId from multi_question  where subject =#{subject} and (level = '3' or level = '4') order by rand() desc limit #{pageNo}
  </select>

  <select id="findBySubjectDiff" resultType="java.lang.Integer">
    select questionId from multi_question  where subject =#{subject} and level = '5'  order by rand() desc limit #{pageNo}
  </select>


  <select id="findBySubtop" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from multi_question
    where subject = #{subject} and wrong_count &gt; 10
    order by wrong_count desc
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from multi_question
    where questionId = #{questionid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from multi_question
    where questionId = #{questionid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.exam.entity.MultiQuestion">
    insert into multi_question (questionId, subject, question, 
      answerA, answerB, answerC, 
      answerD, rightAnswer, analysis, 
      score, section, level, 
      question_setter, update_time, state, 
      wrong_count)
    values (#{questionid,jdbcType=INTEGER}, #{subject,jdbcType=VARCHAR}, #{question,jdbcType=VARCHAR}, 
      #{answera,jdbcType=VARCHAR}, #{answerb,jdbcType=VARCHAR}, #{answerc,jdbcType=VARCHAR}, 
      #{answerd,jdbcType=VARCHAR}, #{rightanswer,jdbcType=VARCHAR}, #{analysis,jdbcType=VARCHAR}, 
      #{score,jdbcType=INTEGER}, #{section,jdbcType=VARCHAR}, #{level,jdbcType=VARCHAR}, 
      #{questionSetter,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}, 
      #{wrongCount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.exam.entity.MultiQuestion">
    insert into multi_question
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="questionid != null">
        questionId,
      </if>
      <if test="subject != null">
        subject,
      </if>
      <if test="question != null">
        question,
      </if>
      <if test="answera != null">
        answerA,
      </if>
      <if test="answerb != null">
        answerB,
      </if>
      <if test="answerc != null">
        answerC,
      </if>
      <if test="answerd != null">
        answerD,
      </if>
      <if test="rightanswer != null">
        rightAnswer,
      </if>
      <if test="analysis != null">
        analysis,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="section != null">
        section,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="questionSetter != null">
        question_setter,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="wrongCount != null">
        wrong_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="questionid != null">
        #{questionid,jdbcType=INTEGER},
      </if>
      <if test="subject != null">
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="question != null">
        #{question,jdbcType=VARCHAR},
      </if>
      <if test="answera != null">
        #{answera,jdbcType=VARCHAR},
      </if>
      <if test="answerb != null">
        #{answerb,jdbcType=VARCHAR},
      </if>
      <if test="answerc != null">
        #{answerc,jdbcType=VARCHAR},
      </if>
      <if test="answerd != null">
        #{answerd,jdbcType=VARCHAR},
      </if>
      <if test="rightanswer != null">
        #{rightanswer,jdbcType=VARCHAR},
      </if>
      <if test="analysis != null">
        #{analysis,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="section != null">
        #{section,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="questionSetter != null">
        #{questionSetter,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="wrongCount != null">
        #{wrongCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.exam.entity.MultiQuestion">
    update multi_question
    <set>
      <if test="subject != null">
        subject = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="question != null">
        question = #{question,jdbcType=VARCHAR},
      </if>
      <if test="answera != null">
        answerA = #{answera,jdbcType=VARCHAR},
      </if>
      <if test="answerb != null">
        answerB = #{answerb,jdbcType=VARCHAR},
      </if>
      <if test="answerc != null">
        answerC = #{answerc,jdbcType=VARCHAR},
      </if>
      <if test="answerd != null">
        answerD = #{answerd,jdbcType=VARCHAR},
      </if>
      <if test="rightanswer != null">
        rightAnswer = #{rightanswer,jdbcType=VARCHAR},
      </if>
      <if test="analysis != null">
        analysis = #{analysis,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="section != null">
        section = #{section,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=VARCHAR},
      </if>
      <if test="questionSetter != null">
        question_setter = #{questionSetter,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="wrongCount != null">
        wrong_count = #{wrongCount,jdbcType=INTEGER},
      </if>
    </set>
    where questionId = #{questionid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.exam.entity.MultiQuestion">
    update multi_question
    set subject = #{subject,jdbcType=VARCHAR},
      question = #{question,jdbcType=VARCHAR},
      answerA = #{answera,jdbcType=VARCHAR},
      answerB = #{answerb,jdbcType=VARCHAR},
      answerC = #{answerc,jdbcType=VARCHAR},
      answerD = #{answerd,jdbcType=VARCHAR},
      rightAnswer = #{rightanswer,jdbcType=VARCHAR},
      analysis = #{analysis,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER},
      section = #{section,jdbcType=VARCHAR},
      level = #{level,jdbcType=VARCHAR},
      question_setter = #{questionSetter,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      wrong_count = #{wrongCount,jdbcType=INTEGER}
    where questionId = #{questionid,jdbcType=INTEGER}
  </update>
</mapper>